{"version":3,"sources":["core/ui/prism-treeview.js"],"names":["Prism","languages","treeview","pattern","inside","alias","hooks","add","env","language","type","content","replace","test","slice","classes","push","parts","toLowerCase","split","length","shift","join","charAt"],"mappings":";;AAAAA,MAAMC,SAAN,CAAgBC,QAAhB,GAA2B;AAC1B,kBAAiB;AAChBC,WAAS,UADO;AAEhBC,UAAQ;AACP,iBAAc,CACb;AACCD,aAAS,YADV;AAECE,WAAO;AAFR,IADa,EAKb;AACCF,aAAS,YADV;AAECE,WAAO;AAFR,IALa,EASb;AACCF,aAAS,WADV;AAECE,WAAO;AAFR,IATa,EAab;AACCF,aAAS,MADV;AAECE,WAAO;AAFR,IAba,CADP;AAmBP,iBAAc;AACbF,aAAS,QADI;AAEbC,YAAQ;AACP;AACA,iBAAY;AAFL;AAFK;AAnBP;AAFQ;AADS,CAA3B;;AAiCAJ,MAAMM,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,EAAwB,UAASC,GAAT,EAAc;AACrC,KAAIA,IAAIC,QAAJ,KAAiB,UAArB,EAAiC;AAChC;AACA,MAAGD,IAAIE,IAAJ,KAAa,eAAhB,EAAiC;AAChCF,OAAIG,OAAJ,GAAcH,IAAIG,OAAJ,CAAYC,OAAZ,CAAoB,KAApB,EAA0B,EAA1B,IAA8B,QAA5C;AACA;AACD,MAAGJ,IAAIE,IAAJ,KAAa,YAAhB,EAA8B;AAC7B,OAAG,kBAAkBG,IAAlB,CAAuBL,IAAIG,OAA3B,CAAH,EAAwC;AACvCH,QAAIG,OAAJ,GAAcH,IAAIG,OAAJ,CAAYG,KAAZ,CAAkB,CAAlB,EAAoB,CAAC,CAArB,CAAd;AACA;AACAN,QAAIO,OAAJ,CAAYC,IAAZ,CAAiB,KAAjB;AACA,IAJD,MAIO;;AAEN,QAAG,qBAAqBH,IAArB,CAA0BL,IAAIG,OAA9B,CAAH,EAA2C;AAC1CH,SAAIG,OAAJ,GAAcH,IAAIG,OAAJ,CAAYG,KAAZ,CAAkB,CAAlB,EAAoB,CAAC,CAArB,CAAd;AACA;;AAED,QAAIG,QAAQT,IAAIG,OAAJ,CAAYO,WAAZ,GAA0BC,KAA1B,CAAgC,GAAhC,CAAZ;AACA,WAAOF,MAAMG,MAAN,GAAe,CAAtB,EAAyB;AACxBH,WAAMI,KAAN;AACA;AACAb,SAAIO,OAAJ,CAAYC,IAAZ,CAAiB,SAASC,MAAMK,IAAN,CAAW,GAAX,CAA1B;AACA;AACD;;AAED,OAAGd,IAAIG,OAAJ,CAAYY,MAAZ,CAAmB,CAAnB,MAAwB,GAA3B,EAAgC;AAC/Bf,QAAIO,OAAJ,CAAYC,IAAZ,CAAiB,SAAjB;AACA;AACD;AACD;AACD,CA9BD","file":"prism-treeview.js","sourcesContent":["Prism.languages.treeview = {\n\t\"treeview-part\": {\n\t\tpattern: /(^|\\n).+/,\n\t\tinside: {\n\t\t\t\"entry-line\": [\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\|-- |├── /,\n\t\t\t\t\talias: \"line-h\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /\\|   |│   /,\n\t\t\t\t\talias: \"line-v\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /`-- |└── /,\n\t\t\t\t\talias: \"line-v-last\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: / {4}/,\n\t\t\t\t\talias: \"line-v-gap\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"entry-name\": {\n\t\t\t\tpattern: /.*\\S.*/,\n\t\t\t\tinside: {\n\t\t\t\t\t// symlink\n\t\t\t\t\t\"operator\": / -> /,\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nPrism.hooks.add('wrap', function(env) {\n\tif (env.language === 'treeview') {\n\t\t// Remove line breaks\n\t\tif(env.type === 'treeview-part') {\n\t\t\tenv.content = env.content.replace(/\\n/g,'')+'<br />';\n\t\t}\n\t\tif(env.type === 'entry-name') {\n\t\t\tif(/(^|[^\\\\])\\/\\s*$/.test(env.content)) {\n\t\t\t\tenv.content = env.content.slice(0,-1);\n\t\t\t\t// This is a folder\n\t\t\t\tenv.classes.push('dir');\n\t\t\t} else {\n\n\t\t\t\tif(/(^|[^\\\\])[=*|]\\s*$/.test(env.content)) {\n\t\t\t\t\tenv.content = env.content.slice(0,-1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar parts = env.content.toLowerCase().split('.');\n\t\t\t\twhile (parts.length > 1) {\n\t\t\t\t\tparts.shift();\n\t\t\t\t\t// Ex. 'foo.min.js' would become '<span class=\"token keyword ext-min-js ext-js\">foo.min.js</span>'\n\t\t\t\t\tenv.classes.push('ext-' + parts.join('-'));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(env.content.charAt(0)==='.') {\n\t\t\t\tenv.classes.push('dotfile');\n\t\t\t}\n\t\t}\n\t}\n});"]}
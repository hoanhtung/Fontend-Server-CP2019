{"version":3,"sources":["phucJS.js"],"names":["convertDatetimeToString","date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","join","loadAvailableRoomByStartEnd","start","end","$","ajax","url","EBSMSLocal","contentType","dataType","data","JSON","stringify","startDate","endDate","method","success","response","select","wrapper","css","empty","console","log","Array","isArray","options","map","e","opt","val","text","getRoomById","name","forEach","append","loadAvailableRoomByHourMinute","roomId","startDateTime","endDateTime","replace","changeSchedule","shiftId","id","estimatedStartDateTime","estimatedEndDateTime","changeScheduleDuration"],"mappings":"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","file":"phucJS.js","sourcesContent":["//================================Phuc==================================\r\nfunction convertDatetimeToString(date) {\r\n    var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n    var month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1);\r\n    var year = date.getFullYear();\r\n    var hour = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n    var minute = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n    return [year, month, day].join('-') + 'T' + [hour, minute].join(':') + 'Z';\r\n}\r\n\r\nfunction loadAvailableRoomByStartEnd(start, end) {\r\n    $.ajax({\r\n        url: EBSMSLocal + '/api/Schedule/GetAvailableRoom/',\r\n        contentType: 'application/json',\r\n        dataType: 'json',\r\n        data: JSON.stringify({\r\n            startDate: start,\r\n            endDate: end\r\n        }),\r\n        method: 'post',\r\n        success: function(response) {\r\n            var select = $('#availableRoom');\r\n            var wrapper = $('#changeRoomWrapper');\r\n            wrapper.css('visibility', 'hidden');\r\n            select.empty();\r\n            console.log(response);\r\n            if (Array.isArray(response)) {\r\n                var options = response.map(function(e) {\r\n                    var opt = $('<option></option>');\r\n                    opt.val(e);\r\n                    opt.text(getRoomById(e).name);\r\n                    return opt;\r\n                });\r\n                options.forEach(function(e) {\r\n                    select.append(e);\r\n                });\r\n                wrapper.css('visibility', 'visible');\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction loadAvailableRoomByHourMinute(hour, minute) {\r\n    $.ajax({\r\n        url: EBSMSLocal + '/api/Schedule/GetAvailableRoomForDuration/',\r\n        data: {\r\n            hour: hour,\r\n            minute: minute\r\n        },\r\n        method: 'get',\r\n        success: function(response) {\r\n            var select = $('#availableDurationRoom');\r\n            var wrapper = $('#changeRoomDurationWrapper');\r\n            wrapper.css('visibility', 'hidden');\r\n            select.empty();\r\n            console.log(response);\r\n            if (Array.isArray(response)) {\r\n                var options = response.map(function(e) {\r\n                    var opt = $('<option></option>');\r\n                    opt.val(`${e.roomId};${e.startDateTime};${e.endDateTime}`);\r\n                    opt.text(`${getRoomById(e.roomId).name} --- startDateTime: ${e.startDateTime.replace('T', ' - ')} - endDateTime: ${e.endDateTime.replace('T', ' - ')}`);\r\n                    return opt;\r\n                });\r\n                options.forEach(function(e) {\r\n                    select.append(e);\r\n                });\r\n                wrapper.css('visibility', 'visible');\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction changeSchedule(shiftId, start, end, roomId) {\r\n    $.ajax({\r\n        url: EBSMSLocal + '/api/Schedule/ChangeSchedule/',\r\n        contentType: 'application/json',\r\n        dataType: 'json',\r\n        data: JSON.stringify({\r\n            id: shiftId,\r\n            estimatedStartDateTime: start,\r\n            estimatedEndDateTime: end,\r\n            roomId: roomId\r\n        }),\r\n        method: 'post',\r\n        success: function() {\r\n            console.log('Kudo iz da bezt!');\r\n        }\r\n    });\r\n}\r\nfunction changeScheduleDuration(shiftId, start, end, roomId) {\r\n    $.ajax({\r\n        url: EBSMSLocal + '/api/Schedule/ChangeScheduleForDuration/',\r\n        contentType: 'application/json',\r\n        dataType: 'json',\r\n        data: JSON.stringify({\r\n            id: shiftId,\r\n            estimatedStartDateTime: start,\r\n            estimatedEndDateTime: end,\r\n            roomId: roomId\r\n        }),\r\n        method: 'post',\r\n        success: function() {\r\n            console.log('Kudo iz da bezt!');\r\n        }\r\n    });\r\n}"]}